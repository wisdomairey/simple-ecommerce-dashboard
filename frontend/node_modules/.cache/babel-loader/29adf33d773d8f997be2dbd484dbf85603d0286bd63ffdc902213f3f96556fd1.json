{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\Web Designs\\\\full-stack\\\\simple-ecommerce-dashboard\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('adminToken');\n      const userData = localStorage.getItem('adminUser');\n      if (token && userData) {\n        try {\n          // Verify token is still valid\n          await authAPI.verifyToken();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              token,\n              user: JSON.parse(userData)\n            }\n          });\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('adminToken');\n          localStorage.removeItem('adminUser');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('adminToken', token);\n      localStorage.setItem('adminUser', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function (for admin setup)\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('adminToken', token);\n      localStorage.setItem('adminUser', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success('Admin account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminUser');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","token","initialState","AuthProvider","children","_s","dispatch","checkAuth","localStorage","getItem","userData","verifyToken","JSON","parse","removeItem","login","credentials","response","data","setItem","stringify","success","_error$response","_error$response$data","errorMessage","message","register","_error$response2","_error$response2$data","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ADMIN/Documents/Web Designs/full-stack/simple-ecommerce-dashboard/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        error: null\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: null,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing token on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('adminToken');\r\n      const userData = localStorage.getItem('adminUser');\r\n\r\n      if (token && userData) {\r\n        try {\r\n          // Verify token is still valid\r\n          await authAPI.verifyToken();\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: {\r\n              token,\r\n              user: JSON.parse(userData)\r\n            }\r\n          });\r\n        } catch (error) {\r\n          // Token is invalid, clear storage\r\n          localStorage.removeItem('adminToken');\r\n          localStorage.removeItem('adminUser');\r\n          dispatch({ type: 'LOGOUT' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: 'LOGIN_START' });\r\n      \r\n      const response = await authAPI.login(credentials);\r\n      const { token, user } = response.data;\r\n\r\n      // Store in localStorage\r\n      localStorage.setItem('adminToken', token);\r\n      localStorage.setItem('adminUser', JSON.stringify(user));\r\n\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { token, user }\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: errorMessage\r\n      });\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Register function (for admin setup)\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'LOGIN_START' });\r\n      \r\n      const response = await authAPI.register(userData);\r\n      const { token, user } = response.data;\r\n\r\n      // Store in localStorage\r\n      localStorage.setItem('adminToken', token);\r\n      localStorage.setItem('adminUser', JSON.stringify(user));\r\n\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { token, user }\r\n      });\r\n\r\n      toast.success('Admin account created successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: errorMessage\r\n      });\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('adminUser');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}