{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminUser');\n    window.location.href = '/admin/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/me'),\n  verifyToken: () => api.post('/auth/verify-token')\n};\n\n// Products API\nexport const productsAPI = {\n  getAll: (params = {}) => api.get('/products', {\n    params\n  }),\n  getById: id => api.get(`/products/${id}`),\n  getCategories: () => api.get('/products/categories'),\n  create: productData => api.post('/products', productData),\n  update: (id, productData) => api.put(`/products/${id}`, productData),\n  delete: id => api.delete(`/products/${id}`),\n  getAllAdmin: (params = {}) => api.get('/products/admin/all', {\n    params\n  })\n};\n\n// Orders API\nexport const ordersAPI = {\n  getAll: (params = {}) => api.get('/orders', {\n    params\n  }),\n  getById: id => api.get(`/orders/${id}`),\n  getByOrderNumber: (orderNumber, email) => api.get(`/orders/number/${orderNumber}`, {\n    params: {\n      email\n    }\n  }),\n  updateStatus: (id, data) => api.put(`/orders/${id}/status`, data),\n  updatePaymentStatus: (id, data) => api.put(`/orders/${id}/payment-status`, data),\n  getStats: (params = {}) => api.get('/orders/stats/summary', {\n    params\n  })\n};\n\n// Checkout API\nexport const checkoutAPI = {\n  createSession: data => api.post('/checkout/create-session', data),\n  getSession: sessionId => api.get(`/checkout/session/${sessionId}`)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getDashboard: (params = {}) => api.get('/analytics/dashboard', {\n    params\n  }),\n  getSales: (params = {}) => api.get('/analytics/sales', {\n    params\n  }),\n  getProducts: (params = {}) => api.get('/analytics/products', {\n    params\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getProfile","get","verifyToken","productsAPI","getAll","params","getById","id","getCategories","productData","update","put","delete","getAllAdmin","ordersAPI","getByOrderNumber","orderNumber","email","updateStatus","data","updatePaymentStatus","getStats","checkoutAPI","createSession","getSession","sessionId","analyticsAPI","getDashboard","getSales","getProducts"],"sources":["C:/Users/ADMIN/Documents/Web Designs/full-stack/simple-ecommerce-dashboard/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle common errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('adminToken');\r\n      localStorage.removeItem('adminUser');\r\n      window.location.href = '/admin/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getProfile: () => api.get('/auth/me'),\r\n  verifyToken: () => api.post('/auth/verify-token'),\r\n};\r\n\r\n// Products API\r\nexport const productsAPI = {\r\n  getAll: (params = {}) => api.get('/products', { params }),\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  getCategories: () => api.get('/products/categories'),\r\n  create: (productData) => api.post('/products', productData),\r\n  update: (id, productData) => api.put(`/products/${id}`, productData),\r\n  delete: (id) => api.delete(`/products/${id}`),\r\n  getAllAdmin: (params = {}) => api.get('/products/admin/all', { params }),\r\n};\r\n\r\n// Orders API\r\nexport const ordersAPI = {\r\n  getAll: (params = {}) => api.get('/orders', { params }),\r\n  getById: (id) => api.get(`/orders/${id}`),\r\n  getByOrderNumber: (orderNumber, email) => \r\n    api.get(`/orders/number/${orderNumber}`, { params: { email } }),\r\n  updateStatus: (id, data) => api.put(`/orders/${id}/status`, data),\r\n  updatePaymentStatus: (id, data) => api.put(`/orders/${id}/payment-status`, data),\r\n  getStats: (params = {}) => api.get('/orders/stats/summary', { params }),\r\n};\r\n\r\n// Checkout API\r\nexport const checkoutAPI = {\r\n  createSession: (data) => api.post('/checkout/create-session', data),\r\n  getSession: (sessionId) => api.get(`/checkout/session/${sessionId}`),\r\n};\r\n\r\n// Analytics API\r\nexport const analyticsAPI = {\r\n  getDashboard: (params = {}) => api.get('/analytics/dashboard', { params }),\r\n  getSales: (params = {}) => api.get('/analytics/sales', { params }),\r\n  getProducts: (params = {}) => api.get('/analytics/products', { params }),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC;IACrCT,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;EACvC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAAC4B,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAK9B,GAAG,CAAC4B,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;EAC5DC,UAAU,EAAEA,CAAA,KAAM/B,GAAG,CAACgC,GAAG,CAAC,UAAU,CAAC;EACrCC,WAAW,EAAEA,CAAA,KAAMjC,GAAG,CAAC4B,IAAI,CAAC,oBAAoB;AAClD,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,WAAW,EAAE;IAAEI;EAAO,CAAC,CAAC;EACzDC,OAAO,EAAGC,EAAE,IAAKtC,GAAG,CAACgC,GAAG,CAAC,aAAaM,EAAE,EAAE,CAAC;EAC3CC,aAAa,EAAEA,CAAA,KAAMvC,GAAG,CAACgC,GAAG,CAAC,sBAAsB,CAAC;EACpD/B,MAAM,EAAGuC,WAAW,IAAKxC,GAAG,CAAC4B,IAAI,CAAC,WAAW,EAAEY,WAAW,CAAC;EAC3DC,MAAM,EAAEA,CAACH,EAAE,EAAEE,WAAW,KAAKxC,GAAG,CAAC0C,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEE,WAAW,CAAC;EACpEG,MAAM,EAAGL,EAAE,IAAKtC,GAAG,CAAC2C,MAAM,CAAC,aAAaL,EAAE,EAAE,CAAC;EAC7CM,WAAW,EAAEA,CAACR,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,qBAAqB,EAAE;IAAEI;EAAO,CAAC;AACzE,CAAC;;AAED;AACA,OAAO,MAAMS,SAAS,GAAG;EACvBV,MAAM,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,SAAS,EAAE;IAAEI;EAAO,CAAC,CAAC;EACvDC,OAAO,EAAGC,EAAE,IAAKtC,GAAG,CAACgC,GAAG,CAAC,WAAWM,EAAE,EAAE,CAAC;EACzCQ,gBAAgB,EAAEA,CAACC,WAAW,EAAEC,KAAK,KACnChD,GAAG,CAACgC,GAAG,CAAC,kBAAkBe,WAAW,EAAE,EAAE;IAAEX,MAAM,EAAE;MAAEY;IAAM;EAAE,CAAC,CAAC;EACjEC,YAAY,EAAEA,CAACX,EAAE,EAAEY,IAAI,KAAKlD,GAAG,CAAC0C,GAAG,CAAC,WAAWJ,EAAE,SAAS,EAAEY,IAAI,CAAC;EACjEC,mBAAmB,EAAEA,CAACb,EAAE,EAAEY,IAAI,KAAKlD,GAAG,CAAC0C,GAAG,CAAC,WAAWJ,EAAE,iBAAiB,EAAEY,IAAI,CAAC;EAChFE,QAAQ,EAAEA,CAAChB,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,uBAAuB,EAAE;IAAEI;EAAO,CAAC;AACxE,CAAC;;AAED;AACA,OAAO,MAAMiB,WAAW,GAAG;EACzBC,aAAa,EAAGJ,IAAI,IAAKlD,GAAG,CAAC4B,IAAI,CAAC,0BAA0B,EAAEsB,IAAI,CAAC;EACnEK,UAAU,EAAGC,SAAS,IAAKxD,GAAG,CAACgC,GAAG,CAAC,qBAAqBwB,SAAS,EAAE;AACrE,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAEA,CAACtB,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,sBAAsB,EAAE;IAAEI;EAAO,CAAC,CAAC;EAC1EuB,QAAQ,EAAEA,CAACvB,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,kBAAkB,EAAE;IAAEI;EAAO,CAAC,CAAC;EAClEwB,WAAW,EAAEA,CAACxB,MAAM,GAAG,CAAC,CAAC,KAAKpC,GAAG,CAACgC,GAAG,CAAC,qBAAqB,EAAE;IAAEI;EAAO,CAAC;AACzE,CAAC;AAED,eAAepC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}